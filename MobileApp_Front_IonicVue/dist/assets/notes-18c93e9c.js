import{X as c,u as s,Y as n}from"./index-250bcd66.js";const a="https://api-app-notes-ajvs.onrender.com",u=c("notes",{state:()=>({notes:[]}),actions:{async fetchNotes(){try{const e=s(),t=await n.get(`${a}/api/notes`,{headers:{Authorization:`Bearer ${e.user.token}`}});this.notes=t.data}catch(e){console.error("Error fetching notes:",e)}},async createNote(e){try{const t=s(),o=(await n.post(`${a}/api/notes`,e,{headers:{Authorization:`Bearer ${t.user.token}`}})).data;this.notes.push(o)}catch(t){console.error("Error creating note:",t)}},async deleteNote(e){try{const t=s();await n.delete(`${a}/api/notes/${e}`,{headers:{Authorization:`Bearer ${t.user.token}`}}),this.notes=this.notes.filter(r=>r.id!==e)}catch(t){console.error(`Error deleting note with id ${e}:`,t)}},async updateNote(e,t){try{const r=s();await n.put(`${a}/api/notes/${e}`,t,{headers:{Authorization:`Bearer ${r.user.token}`}});const o=this.notes.findIndex(i=>i.id===e);o!==-1&&(this.notes[o]={...this.notes[o],...t})}catch(r){console.error(`Error updating note with id ${e}:`,r)}},async fetchNoteById(e){try{const t=s();return(await n.get(`${a}/api/notes/${e}`,{headers:{Authorization:`Bearer ${t.user.token}`}})).data}catch(t){return console.error(`Error fetching note with id ${e}:`,t),null}}}});export{u};
